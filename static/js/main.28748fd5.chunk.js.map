{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","moveRight","step","maxValue","setState","prevState","currentPosition","moveLeft","prevProps","this","props","images","itemWidth","frameSize","animationDuration","className","style","width","height","map","image","src","alt","transform","transition","type","disabled","onClick","React","Component","App","maxItemWidth","length","action","htmlFor","id","defaultValue","onChange","event","target","value","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28748fd5.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n};\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  maxValue: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { maxValue, step } = this.props;\n    const { position } = this.state;\n\n    if (maxValue > position) {\n      if (prevProps.maxValue !== maxValue) {\n        this.moveRight(step, maxValue);\n      }\n    }\n  }\n\n  moveRight = (step: number, maxValue: number) => {\n    this.setState((prevState: State) => {\n      const currentPosition = prevState.position + (100 * step * -1);\n\n      if (maxValue >= currentPosition) {\n        return {\n          position: maxValue,\n        };\n      }\n\n      return {\n        position: currentPosition,\n      };\n    });\n  };\n\n  moveLeft = (step: number) => {\n    this.setState((prevState: State) => {\n      const currentPosition = prevState.position + (100 * step);\n\n      if (currentPosition > 0) {\n        return {\n          position: 0,\n        };\n      }\n\n      return {\n        position: currentPosition,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      maxValue,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n              height: `${itemWidth}px`,\n            }}\n          >\n            {images.map((image) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={`${image}`}\n                  style={{\n                    transform: `translateX(${position}%)`,\n                    transition: `${animationDuration}ms`,\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          disabled={position >= 0}\n          onClick={() => this.moveLeft(step)}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={maxValue >= this.state.position}\n          onClick={() => this.moveRight(step, maxValue)}\n        >\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frameSize: number;\n  animationDuration: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  maxItemWidth = () => {\n    return (this.state.images.length - this.state.frameSize) * -100;\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <form action=\"get\" className=\"App_form\">\n          <label\n            htmlFor=\"itemWidth\"\n            className=\"App_label\"\n          >\n            <span>Width:</span>\n            <input\n              id=\"itemWidth\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue={130}\n              onChange={(event) => (\n                this.setState({ itemWidth: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"frameSize\"\n            className=\"App_label\"\n          >\n            <span>Framesize:</span>\n            <input\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue={3}\n              onChange={(event) => (\n                this.setState({ frameSize: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"step\"\n            className=\"App_label\"\n          >\n            <span>Step:</span>\n            <input\n              id=\"step\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue={3}\n              onChange={(event) => (\n                this.setState({ step: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"App_label\"\n          >\n            <span>Duration:</span>\n            <input\n              id=\"animationDuration\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue={1000}\n              onChange={(event) => (\n                this.setState({ animationDuration: +(event.target.value) })\n              )}\n            />\n          </label>\n        </form>\n        <Carousel\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          images={images}\n          animationDuration={animationDuration}\n          maxValue={this.maxItemWidth()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}