{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","moveRight","step","startValue","setState","prevState","currentPosition","moveLeft","prevProps","this","props","images","itemWidth","frameSize","animationDuration","className","style","width","map","image","src","alt","transform","transition","type","disabled","onClick","React","Component","App","maxItemsWidth","length","action","htmlFor","id","defaultValue","onChange","event","target","value","min","max","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,GAFd,EAgBEC,UAAY,SAACC,EAAcC,GACzB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAkBD,EAAUL,UAAa,IAAME,EAErD,OAAIC,GAAcG,EACT,CACLN,SAAUG,GAIP,CACLH,SAAUM,OA3BlB,EAgCEC,SAAW,SAACL,GACV,EAAKE,UAAS,SAACC,GACb,IAAMC,EAAkBD,EAAUL,SAAY,IAAME,EAEpD,OAAII,EAAkB,EACb,CACLN,SAAU,GAIP,CACLA,SAAUM,OA3ClB,wDAKE,SAAmBE,GACjB,MAA6BC,KAAKC,MAA1BP,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,KAGhBC,EAFiBM,KAAKV,MAAlBC,UAGFQ,EAAUL,aAAeA,GAC3BM,KAAKR,UAAUC,EAAMC,KAX7B,oBAgDE,WAAU,IAAD,OACP,EAOIM,KAAKC,MANPC,EADF,EACEA,OACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAX,EAJF,EAIEA,KACAY,EALF,EAKEA,kBACAX,EANF,EAMEA,WAGMH,EAAaS,KAAKV,MAAlBC,SAER,OACE,qCACE,qBAAKe,UAAU,WAAf,SACE,oBACEA,UAAU,iBACVC,MAAO,CACLC,MAAM,GAAD,OAAKL,EAAYC,EAAjB,OAHT,SAMGF,EAAOO,KAAI,SAACC,GAAD,OACV,6BACE,qBACEC,IAAKD,EACLE,IAAG,UAAKF,GACRH,MAAO,CACLM,UAAU,cAAD,OAAgBtB,EAAhB,MACTuB,WAAW,GAAD,OAAKT,EAAL,MACVG,MAAM,GAAD,OAAKL,EAAL,UAPFO,UAcf,wBACEJ,UAAU,mBACVS,KAAK,SACLC,SAAUzB,GAAY,EACtB0B,QAAS,kBAAM,EAAKnB,SAASL,IAJ/B,kBAQA,wBACEa,UAAU,mBACV,UAAQ,OACRS,KAAK,SACLC,SAAUtB,GAAcM,KAAKV,MAAMC,SACnC0B,QAAS,kBAAM,EAAKzB,UAAUC,EAAMC,IALtC,yBA5FR,GAA8BwB,IAAMC,WCJvBC,EAAb,4MACE9B,MAAQ,CACNY,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFE,UAAW,EACXD,UAAW,IACXV,KAAM,EACNY,kBAAmB,KAjBvB,EAoBEgB,cAAgB,WACd,OAA4D,KAApD,EAAK/B,MAAMY,OAAOoB,OAAS,EAAKhC,MAAMc,YArBlD,4CAwBE,WAAU,IAAD,OACP,EAMIJ,KAAKV,MALPY,EADF,EACEA,OACAE,EAFF,EAEEA,UACAD,EAHF,EAGEA,UACAV,EAJF,EAIEA,KACAY,EALF,EAKEA,kBAGF,OACE,sBAAKC,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCJ,EAAOoB,OAA1C,aACA,uBAAMC,OAAO,MAAMjB,UAAU,WAA7B,UACE,wBACEkB,QAAQ,YACRlB,UAAU,YAFZ,UAIE,0CACA,uBACEmB,GAAG,YACHnB,UAAU,YACVS,KAAK,SACLW,aAAa,MACbC,SAAU,SAACC,GAAD,OACR,EAAKjC,SAAS,CAAEQ,WAAayB,EAAMC,OAAOC,cAIhD,uBACA,wBACEN,QAAQ,YACRlB,UAAU,YAFZ,UAIE,8CACA,uBACEmB,GAAG,YACHM,IAAI,IACJC,IAAI,IACJ1B,UAAU,YACVS,KAAK,SACLW,aAAa,IACbC,SAAU,SAACC,GAAD,OACR,EAAKjC,SAAS,CAAES,WAAawB,EAAMC,OAAOC,cAIhD,uBACA,wBACEN,QAAQ,OACRlB,UAAU,YAFZ,UAIE,yCACA,uBACEmB,GAAG,OACHnB,UAAU,YACVS,KAAK,SACLW,aAAa,IACbC,SAAU,SAACC,GAAD,OACR,EAAKjC,SAAS,CAAEF,MAAQmC,EAAMC,OAAOC,cAI3C,uBACA,wBACEN,QAAQ,oBACRlB,UAAU,YAFZ,UAIE,6CACA,uBACEmB,GAAG,oBACHnB,UAAU,YACVS,KAAK,SACLW,aAAa,OACbC,SAAU,SAACC,GAAD,OACR,EAAKjC,SAAS,CAAEU,mBAAqBuB,EAAMC,OAAOC,iBAK1D,cAAC,EAAD,CACE3B,UAAWA,EACXC,UAAWA,EACXX,KAAMA,EACNS,OAAQA,EACRG,kBAAmBA,EACnBX,WAAYM,KAAKqB,yBA9G3B,GAAyBH,IAAMC,WCT/Bc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6e6874f.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n};\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  startValue: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { startValue, step } = this.props;\n    const { position } = this.state;\n\n    if (startValue > position) {\n      if (prevProps.startValue !== startValue) {\n        this.moveRight(step, startValue);\n      }\n    }\n  }\n\n  moveRight = (step: number, startValue: number) => {\n    this.setState((prevState: State) => {\n      const currentPosition = prevState.position + (-100 * step);\n\n      if (startValue >= currentPosition) {\n        return {\n          position: startValue,\n        };\n      }\n\n      return {\n        position: currentPosition,\n      };\n    });\n  };\n\n  moveLeft = (step: number) => {\n    this.setState((prevState: State) => {\n      const currentPosition = prevState.position + (100 * step);\n\n      if (currentPosition > 0) {\n        return {\n          position: 0,\n        };\n      }\n\n      return {\n        position: currentPosition,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      startValue,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n            }}\n          >\n            {images.map((image) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={`${image}`}\n                  style={{\n                    transform: `translateX(${position}%)`,\n                    transition: `${animationDuration}ms`,\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          disabled={position >= 0}\n          onClick={() => this.moveLeft(step)}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={startValue >= this.state.position}\n          onClick={() => this.moveRight(step, startValue)}\n        >\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ntype State = {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frameSize: number;\n  animationDuration: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    itemWidth: 130,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  maxItemsWidth = () => {\n    return (this.state.images.length - this.state.frameSize) * -100;\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <form action=\"get\" className=\"App_form\">\n          <label\n            htmlFor=\"itemWidth\"\n            className=\"App_label\"\n          >\n            <span>Width:</span>\n            <input\n              id=\"itemWidth\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue=\"130\"\n              onChange={(event) => (\n                this.setState({ itemWidth: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"frameSize\"\n            className=\"App_label\"\n          >\n            <span>Framesize:</span>\n            <input\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue=\"3\"\n              onChange={(event) => (\n                this.setState({ frameSize: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"step\"\n            className=\"App_label\"\n          >\n            <span>Step:</span>\n            <input\n              id=\"step\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue=\"3\"\n              onChange={(event) => (\n                this.setState({ step: +(event.target.value) })\n              )}\n            />\n          </label>\n          <br />\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"App_label\"\n          >\n            <span>Duration:</span>\n            <input\n              id=\"animationDuration\"\n              className=\"App_input\"\n              type=\"number\"\n              defaultValue=\"1000\"\n              onChange={(event) => (\n                this.setState({ animationDuration: +(event.target.value) })\n              )}\n            />\n          </label>\n        </form>\n        <Carousel\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          images={images}\n          animationDuration={animationDuration}\n          startValue={this.maxItemsWidth()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}